// Mocks generated by Mockito 5.4.5 from annotations
// in product_catalog/test/mocks/mock_product_repository.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:product_catalog/core/resources/data_state.dart' as _i2;
import 'package:product_catalog/features/product/data/models/product.dart'
    as _i6;
import 'package:product_catalog/features/product/domain/entities/product.dart'
    as _i5;
import 'package:product_catalog/features/product/domain/repository/product_repository.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDataState_0<T> extends _i1.SmartFake implements _i2.DataState<T> {
  _FakeDataState_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ProductRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockProductRepository extends _i1.Mock implements _i3.ProductRepository {
  MockProductRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.DataState<_i5.ProductResponseEntity>> getAllProduct(
    int? skip,
    String? search,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllProduct,
          [
            skip,
            search,
          ],
        ),
        returnValue: _i4.Future<_i2.DataState<_i5.ProductResponseEntity>>.value(
            _FakeDataState_0<_i5.ProductResponseEntity>(
          this,
          Invocation.method(
            #getAllProduct,
            [
              skip,
              search,
            ],
          ),
        )),
      ) as _i4.Future<_i2.DataState<_i5.ProductResponseEntity>>);

  @override
  _i4.Future<List<_i6.ProductItemModel>> getSavedProducts() =>
      (super.noSuchMethod(
        Invocation.method(
          #getSavedProducts,
          [],
        ),
        returnValue: _i4.Future<List<_i6.ProductItemModel>>.value(
            <_i6.ProductItemModel>[]),
      ) as _i4.Future<List<_i6.ProductItemModel>>);

  @override
  _i4.Future<void> saveProduct(_i5.ProductItemEntity? productItemEntity) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveProduct,
          [productItemEntity],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<_i6.ProductItemModel?> getProductById(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getProductById,
          [id],
        ),
        returnValue: _i4.Future<_i6.ProductItemModel?>.value(),
      ) as _i4.Future<_i6.ProductItemModel?>);

  @override
  _i4.Future<void> updateProductFavStatus(
    int? id,
    int? isFavorite,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateProductFavStatus,
          [
            id,
            isFavorite,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}
